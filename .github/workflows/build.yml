name: Build and Release

on:
  push:
    tags:
      - 'v*'

env:
  APP_NAME: ZJUCTFTools

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: mips64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binary
        id: build
        run: |
          mkdir -p build
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then
            EXT=".exe"
          fi
          FILENAME=${{ env.APP_NAME }}-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}
      
          VERSION=$(git describe --tags || echo "dev-build")
      
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags "-X main.Version=$VERSION" \
            -o build/$FILENAME
      
          echo "Built $FILENAME with version $VERSION"
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.filename }}
          path: build/${{ steps.build.outputs.filename }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build
          merge-multiple: true

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
